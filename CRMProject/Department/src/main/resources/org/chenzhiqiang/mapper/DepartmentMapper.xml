<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.chenzhiqiang.mapper.DepartmentMapper">


    <sql id="baseColum">
        `id`,`name`,`intro`,`create_time`,`update_time`,`manager_id`,`parent_id`,`path`,`state`
    </sql>
    <insert id="addDepartment" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO t_org_department(`name`,
                                     `intro`,
                                     `create_time`,
                                     `update_time`,
                                     `manager_id`,
                                     `parent_id`,
                                     `path`,
                                     `state`)
        VALUES (#{name},
                #{intro},
                #{createTime},
                #{updateTime},
                #{manager.id},
                #{parent.id},
                #{path},
                #{state})
    </insert>
    <update id="modifyDepartment">
        UPDATE t_org_department
        SET `name`=#{name},
            `intro`=#{intro},
            `create_time`=#{createTime},
            `update_time`=#{updateTime},
            `manager_id`=#{manager.id},
            `parent_id`=#{parent.id},
            `path`=#{path},
            `state`=#{state}
        WHERE id = 53
    </update>
    <delete id="deleteByName">
        DELETE
        FROM t_org_department
        WHERE name = #{name}
    </delete>
    <delete id="deleteById">
        DELETE
        FROM t_org_department
        WHERE id = #{id}
    </delete>

    <resultMap id="departmentMap" type="Department">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="intro" column="intro"></result>
        <result property="createTime" column="create_time"></result>
        <result property="updateTime" column="update_time"></result>
        <result property="path" column="path"></result>
        <result property="state" column="state"></result>
        <association property="manager" javaType="Employee">
            <id property="id" column="manager_id"></id>
            <result property="username" column="username"></result>
        </association>
        <association property="parent" javaType="Department">
            <id property="id" column="parent_id"></id>
            <result property="name" column="pname"></result>
        </association>
        <collection property="childDepartments" ofType="Department">
            <id column="cid" property="id" />
            <result property="name" column="cname" />
        </collection>
    </resultMap>

    <select id="selectAll" resultMap="departmentMap">
        SELECT
        <include refid="baseColum"/>
        FROM
        t_org_department
    </select>
    <select id="selectByID" resultMap="departmentMap">
        SELECT
        <include refid="baseColum"/>
        FROM
        t_org_department
        WHERE id = #{id}
    </select>
    <sql id="whereCondition">
        <where>
            <if test="keyword != null and keyword != ''">
                c.name like concat('%',#{keyword},'%') or c.intro like concat('%',#{keyword},'%')
            </if>
        </where>
    </sql>
    <!--             高级查询               -->
    <select id="seletByQueryObjec" resultMap="departmentMap">
        SELECT
        c.*,
        e.username ,
        p.`name` as pname
        FROM
        t_org_department c
        LEFT JOIN t_org_employee e ON c.manager_id = e.id
        LEFT JOIN t_org_department p on c.parent_id = p.id
        <include refid="whereCondition"/>
        limit #{start},#{pageSize}
    </select>
    <select id="selectByPartentID" resultMap="departmentMap">
        select
            <include refid="baseColum"></include>
        from t_org_department where parent_id = #{id}
    </select>
    <select id="getChildDepartments" resultMap="departmentMap">
        SELECT
            p.id,
            p.NAME,
            c.id as cid,
            c.`name` as cname
        FROM
            t_org_department p
                LEFT JOIN t_org_department c ON p.id = c.parent_id
        WHERE
            p.parent_id IS NULL
    </select>
    <!--  批量删除  -->
    <delete id="patchDeleteDepartments">
        delete from t_org_department where id in
        <foreach collection="list" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>
</mapper>